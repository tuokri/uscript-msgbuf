    // TODO: for multipart packets, the sender is responsible for splitting the
    //   messages. Document this requirement better somewhere.
    *vi++ = static_cast<::umb::byte>(std::clamp(size, 0ULL, ::umb::g_packet_size));
    *vi++ = static_cast<::umb::byte>(type());
    *vi++ = 0;
{% for field in message.fields %}
    {% if field.type == "int" %}
        ::umb::encode_int(m_{{ field.name }}, vi);
    {% else if field.type == "byte" %}
        ::umb::encode_byte(m_{{ field.name }}, vi);
    {% else if field.type == "float" %}
        ::umb::encode_float(m_{{ field.name }}, vi);
    {% else if field.type == "bytes" %}
        ::umb::encode_bytes(m_{{ field.name }}, vi);
    {% else if field.type == "string" %}
        ::umb::encode_string(m_{{ field.name }}, vi);
    {% else %}
        {{ error("invalid type: '", field.type, "' in ", message.name) }}
    {% endif %}
{% endfor %}
