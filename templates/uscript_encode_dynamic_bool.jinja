{# Copyright (C) 2023  Tuomo Kriikkula #}
{# This program is free software: you can redistribute it and/or modify #}
{#     it under the terms of the GNU Lesser General Public License as published #}
{# by the Free Software Foundation, either version 3 of the License, or #}
{# (at your option) any later version. #}
{# #}
{# This program is distributed in the hope that it will be useful, #}
{#     but WITHOUT ANY WARRANTY; without even the implied warranty of #}
{# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the #}
{# GNU Lesser General Public License for more details. #}
{# #}
{# You should have received a copy of the GNU Lesser General Public License #}
{#     along with this program.  If not, see <https://www.gnu.org/licenses/>. -#}
{% set in_pack = var_bool("in_pack", "get") %}
{% if bp_is_packed(message, field.name) %}
    {% set bps = message.bool_packs %}
    {% if not in_pack %}
        {% set in_pack = true %}
    Bytes[I++] = (
           byte(Msg.{{ field.name }})
    {% else %}
        | (byte(Msg.{{ field.name }}) << {{ bp_pack_index(bps, field.name) }})
        {% if bp_is_last(bps, field.name) or bp_is_multi_pack_boundary(bps, field.name) %}
            {% set in_pack = false %}
    );
        {% endif %}
    {% endif %}
{% else %}
    Bytes[I++] = byte(Msg.{{ field.name }});
{% endif %}
{% set in_pack = var_bool("in_pack", "set", in_pack) -%}
